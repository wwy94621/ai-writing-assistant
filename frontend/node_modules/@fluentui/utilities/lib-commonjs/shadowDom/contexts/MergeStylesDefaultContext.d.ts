import { ExtendedCSSStyleSheet } from '@fluentui/merge-styles';
import * as React from 'react';
import type { AdoptedStylesheetExHook, AdoptedStylesheetHook } from '../hooks/useAdoptedStylesheet';
import type { ShadowConfigHook } from '../hooks/useShadowConfig';
import type { HasMergeStylesShadowRootContextHook, MergeStylesShadowRootContextHook } from '../hooks/useMergeStylesShadowRoot';
import type { MergeStylesRootStylesheetsHook } from '../hooks/useMergeStylesRootStylesheets';
import type { UseStyledHook } from '../hooks/useStyled';
export declare const noop: () => boolean;
export declare const noopShadow: () => import("@fluentui/merge-styles").ShadowConfig;
export declare const noopRootStylesheets: () => Map<any, any>;
export declare const noopUndefined: () => undefined;
export declare const getNewContext: () => MergeStylesDefaultContextValue;
export type UseWindowHook = () => Window | undefined;
export type MergeStylesDefaultContextValue = {
    stylesheets: Map<string, ExtendedCSSStyleSheet>;
    useAdoptedStylesheetEx: AdoptedStylesheetExHook;
    useAdoptedStylesheet: AdoptedStylesheetHook;
    useShadowConfig: ShadowConfigHook;
    useMergeStylesShadowRootContext: MergeStylesShadowRootContextHook;
    useHasMergeStylesShadowRootContext: HasMergeStylesShadowRootContextHook;
    useMergeStylesRootStylesheets: MergeStylesRootStylesheetsHook;
    useWindow: UseWindowHook;
    useStyled: UseStyledHook;
};
export declare const MergeStylesDefaultContext: React.Context<MergeStylesDefaultContextValue>;
