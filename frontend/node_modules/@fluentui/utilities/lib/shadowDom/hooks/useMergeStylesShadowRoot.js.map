{"version":3,"file":"useMergeStylesShadowRoot.js","sourceRoot":"../src/","sources":["shadowDom/hooks/useMergeStylesShadowRoot.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EACL,4BAA4B,GAE7B,MAAM,0CAA0C,CAAC;AAKlD;;;GAGG;AACH,MAAM,CAAC,IAAM,kCAAkC,GAAwC;IACrF,OAAO,CAAC,CAAC,+BAA+B,EAAE,CAAC;AAC7C,CAAC,CAAC;AAEF;;;GAGG;AACH,MAAM,CAAC,IAAM,+BAA+B,GAAqC;IAC/E,OAAO,KAAK,CAAC,UAAU,CAAC,4BAA4B,CAAC,CAAC;AACxD,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport {\n  MergeStylesShadowRootContext,\n  MergeStylesShadowRootContextValue,\n} from '../contexts/MergeStylesShadowRootContext';\n\nexport type HasMergeStylesShadowRootContextHook = () => boolean;\nexport type MergeStylesShadowRootContextHook = () => MergeStylesShadowRootContextValue | undefined;\n\n/**\n * Test if a context is available.\n * @returns true if there is a context.\n */\nexport const useHasMergeStylesShadowRootContext: HasMergeStylesShadowRootContextHook = () => {\n  return !!useMergeStylesShadowRootContext();\n};\n\n/**\n * Get a reference to the shadow root context.\n * @returns The context for the shadow root.\n */\nexport const useMergeStylesShadowRootContext: MergeStylesShadowRootContextHook = () => {\n  return React.useContext(MergeStylesShadowRootContext);\n};\n"]}