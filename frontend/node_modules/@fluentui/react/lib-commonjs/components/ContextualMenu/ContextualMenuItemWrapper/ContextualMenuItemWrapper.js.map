{"version":3,"file":"ContextualMenuItemWrapper.js","sourceRoot":"../src/","sources":["components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuItemWrapper.tsx"],"names":[],"mappings":";;;;AAAA,6BAA+B;AAC/B,gDAA4E;AAG5E;IAA+C,qDAAgD;IAC7F,mCAAY,KAAsC;QAChD,YAAA,MAAK,YAAC,KAAK,CAAC,SAAC;QAQL,uBAAiB,GAAG,UAAC,EAAiC;YACxD,IAAA,KAA6B,KAAI,CAAC,KAAK,EAArC,IAAI,UAAA,EAAE,gBAAgB,sBAAe,CAAC;YAC9C,IAAI,gBAAgB,EAAE,CAAC;gBACrB,gBAAgB,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,aAA4B,CAAC,CAAC;YAC9D,CAAC;QACH,CAAC,CAAC;QAEQ,kBAAY,GAAG,UAAC,EAAiC;YACnD,IAAA,KAA4B,KAAI,CAAC,KAAK,EAApC,IAAI,UAAA,EAAE,eAAe,qBAAe,CAAC;YAC7C,IAAI,eAAe,EAAE,CAAC;gBACpB,eAAe,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,aAA4B,CAAC,CAAC;YAC7D,CAAC;QACH,CAAC,CAAC;QAEQ,uBAAiB,GAAG,UAAC,EAAiC;YACxD,IAAA,KAA6B,KAAI,CAAC,KAAK,EAArC,IAAI,UAAA,EAAE,gBAAgB,sBAAe,CAAC;YAC9C,IAAI,gBAAgB,EAAE,CAAC;gBACrB,gBAAgB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAC7B,CAAC;QACH,CAAC,CAAC;QAEQ,oBAAc,GAAG,UAAC,EAAoC;YACxD,IAAA,KAA0B,KAAI,CAAC,KAAK,EAAlC,IAAI,UAAA,EAAE,aAAa,mBAAe,CAAC;YAC3C,IAAI,aAAa,EAAE,CAAC;gBAClB,aAAa,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAC1B,CAAC;QACH,CAAC,CAAC;QAEQ,sBAAgB,GAAG,UAAC,EAAiC;YACvD,IAAA,KAA4B,KAAI,CAAC,KAAK,EAApC,IAAI,UAAA,EAAE,eAAe,qBAAe,CAAC;YAC7C,IAAI,eAAe,EAAE,CAAC;gBACpB,eAAe,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,aAA4B,CAAC,CAAC;YAC7D,CAAC;QACH,CAAC,CAAC;QAEQ,uBAAiB,GAAG;YAC5B,OAAO,SAAS,CAAC;QACnB,CAAC,CAAC;QA5CA,IAAA,kCAAsB,EAAC,KAAI,CAAC,CAAC;;IAC/B,CAAC;IAEM,yDAAqB,GAA5B,UAA6B,QAAyC;QACpE,OAAO,CAAC,IAAA,0BAAc,EAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAwCH,gCAAC;AAAD,CAAC,AAhDD,CAA+C,KAAK,CAAC,SAAS,GAgD7D;AAhDY,8DAAyB","sourcesContent":["import * as React from 'react';\nimport { initializeComponentRef, shallowCompare } from '../../../Utilities';\nimport type { IContextualMenuItemWrapperProps } from './ContextualMenuItemWrapper.types';\n\nexport class ContextualMenuItemWrapper extends React.Component<IContextualMenuItemWrapperProps> {\n  constructor(props: IContextualMenuItemWrapperProps) {\n    super(props);\n    initializeComponentRef(this);\n  }\n\n  public shouldComponentUpdate(newProps: IContextualMenuItemWrapperProps): boolean {\n    return !shallowCompare(newProps, this.props);\n  }\n\n  protected _onItemMouseEnter = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseEnter } = this.props;\n    if (onItemMouseEnter) {\n      onItemMouseEnter(item, ev, ev.currentTarget as HTMLElement);\n    }\n  };\n\n  protected _onItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemClickBase } = this.props;\n    if (onItemClickBase) {\n      onItemClickBase(item, ev, ev.currentTarget as HTMLElement);\n    }\n  };\n\n  protected _onItemMouseLeave = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseLeave } = this.props;\n    if (onItemMouseLeave) {\n      onItemMouseLeave(item, ev);\n    }\n  };\n\n  protected _onItemKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const { item, onItemKeyDown } = this.props;\n    if (onItemKeyDown) {\n      onItemKeyDown(item, ev);\n    }\n  };\n\n  protected _onItemMouseMove = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseMove } = this.props;\n    if (onItemMouseMove) {\n      onItemMouseMove(item, ev, ev.currentTarget as HTMLElement);\n    }\n  };\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return undefined;\n  };\n}\n"]}