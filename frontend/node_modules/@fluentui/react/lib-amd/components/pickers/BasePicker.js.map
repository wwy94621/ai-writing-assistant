{"version":3,"file":"BasePicker.js","sourceRoot":"../src/","sources":["components/pickers/BasePicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Async,\n  KeyCodes,\n  css,\n  elementContains,\n  format,\n  getId,\n  classNamesFunction,\n  styled,\n  initializeComponentRef,\n  IStyleFunctionOrObject,\n} from '../../Utilities';\nimport { Callout } from '../../Callout';\nimport { Selection, SelectionZone, SelectionMode } from '../../utilities/selection/index';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { Suggestions } from './Suggestions/Suggestions';\nimport { getStyles as suggestionsStyles } from './Suggestions/Suggestions.styles';\nimport { SuggestionsController } from './Suggestions/SuggestionsController';\nimport { ValidationState } from './BasePicker.types';\nimport { Autofill } from '../Autofill/index';\nimport * as stylesImport from './BasePicker.scss';\nimport { Label } from '../../Label';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type {\n  ISuggestions,\n  ISuggestionsProps,\n  ISuggestionsStyleProps,\n  ISuggestionsStyles,\n} from './Suggestions/Suggestions.types';\nimport type { IBasePicker, IBasePickerProps, IBasePickerStyleProps, IBasePickerStyles } from './BasePicker.types';\nimport type { IAutofill } from '../Autofill/index';\nimport type { IPickerItemProps } from './PickerItem.types';\nimport { WindowContext } from '@fluentui/react-window-provider';\nimport { getDocumentEx } from '../../utilities/dom';\nimport type { ILabelStyleProps, ILabelStyles } from '../../Label';\n\nconst legacyStyles: any = stylesImport;\n\nconst EXTENDED_LOAD_TIME = 3000;\n\nexport interface IBasePickerState<T> {\n  items?: any;\n  suggestedDisplayValue?: string;\n  moreSuggestionsAvailable?: boolean;\n  isFocused?: boolean;\n  isSearching?: boolean;\n  isMostRecentlyUsedVisible?: boolean;\n  suggestionsVisible?: boolean;\n  suggestionsLoading?: boolean;\n  suggestionsExtendedLoading?: boolean;\n  isResultsFooterVisible?: boolean;\n  selectedIndices?: number[];\n  selectionRemoved?: T;\n  errorMessage?: string | JSX.Element;\n}\n\n/**\n * Aria id's for internal picker components\n * {@docCategory Pickers}\n */\nexport type IPickerAriaIds = {\n  /**\n   * Aria id for selected suggestion alert component\n   */\n  selectedSuggestionAlert: string;\n  /**\n   * Aria id for selected items container component\n   */\n  selectedItems: string;\n  /**\n   * Aria id for suggestions list component\n   */\n  suggestionList: string;\n  /**\n   * Aria id for element with role=combobox\n   */\n  combobox: string;\n  /**\n   * Aria id for error message component\n   */\n  error: string;\n};\n\nconst getClassNames = classNamesFunction<IBasePickerStyleProps, IBasePickerStyles>();\n\n/**\n * Should be removed once new picker without inheritance is created\n */\nfunction getStyledSuggestions<T>(suggestionsType: new (props: ISuggestionsProps<T>) => Suggestions<T>) {\n  return styled<ISuggestionsProps<any>, ISuggestionsStyleProps, ISuggestionsStyles>(\n    suggestionsType,\n    suggestionsStyles,\n    undefined,\n    {\n      scope: 'Suggestions',\n    },\n  );\n}\n\n/**\n * {@docCategory Pickers}\n */\nexport class BasePicker<T extends {}, P extends IBasePickerProps<T>>\n  extends React.Component<P, IBasePickerState<T>>\n  implements IBasePicker<T>\n{\n  public static contextType = WindowContext;\n\n  // Refs\n  protected root = React.createRef<HTMLDivElement>();\n  protected input = React.createRef<IAutofill>();\n  protected suggestionElement = React.createRef<ISuggestions<T>>();\n  protected selection: Selection;\n  protected suggestionStore: SuggestionsController<T>;\n  /**\n   * @deprecated this is no longer necessary as typescript now supports generic elements\n   */\n  protected SuggestionOfProperType = Suggestions as new (props: ISuggestionsProps<T>) => Suggestions<T>;\n  protected currentPromise: PromiseLike<any> | undefined;\n  protected _ariaMap: IPickerAriaIds;\n  // eslint-disable-next-line @typescript-eslint/no-deprecated\n  private _styledSuggestions = getStyledSuggestions(this.SuggestionOfProperType);\n  private _id: string;\n  private _async: Async;\n  private _isMounted: boolean = false;\n  private _onResolveSuggestionsDebounced: (updatedValue: string) => void;\n  private _overrideScrollDismiss = false;\n  private _overrideScrollDimissTimeout: number;\n\n  public static getDerivedStateFromProps(newProps: IBasePickerProps<any>) {\n    if (newProps.selectedItems) {\n      return { items: newProps.selectedItems };\n    }\n    return null;\n  }\n\n  constructor(basePickerProps: P) {\n    super(basePickerProps);\n\n    initializeComponentRef(this);\n\n    const items: T[] = basePickerProps.selectedItems || basePickerProps.defaultSelectedItems || [];\n\n    this._id = getId();\n    this._ariaMap = {\n      selectedItems: `selected-items-${this._id}`,\n      selectedSuggestionAlert: `selected-suggestion-alert-${this._id}`,\n      suggestionList: `suggestion-list-${this._id}`,\n      combobox: `combobox-${this._id}`,\n      error: `error-${this._id}`,\n    };\n    this.suggestionStore = new SuggestionsController<T>();\n    this.selection = new Selection({ onSelectionChanged: () => this.onSelectionChange() });\n    this.selection.setItems(items);\n    this.state = {\n      items,\n      suggestedDisplayValue: '',\n      isMostRecentlyUsedVisible: false,\n      moreSuggestionsAvailable: false,\n      isFocused: false,\n      isSearching: false,\n      selectedIndices: [],\n      selectionRemoved: undefined,\n    };\n  }\n\n  public get items(): T[] {\n    return this.state.items;\n  }\n\n  public componentDidMount(): void {\n    this._isMounted = true;\n    this._async = new Async(this);\n    this._updateErrorMessage(this.state.items);\n    this.selection.setItems(this.state.items);\n    this._onResolveSuggestionsDebounced = this._async.debounce(this._onResolveSuggestions, this.props.resolveDelay);\n  }\n\n  public componentDidUpdate(oldProps: P, oldState: IBasePickerState<T>) {\n    if (this.state.items && this.state.items !== oldState.items) {\n      const currentSelectedIndex = this.selection.getSelectedIndices()[0];\n      this.selection.setItems(this.state.items);\n      if (this.state.isFocused) {\n        // Reset focus and selection so that selected item stays in sync if something\n        // has been removed\n        if (this.state.items.length < oldState.items.length) {\n          this.selection.setIndexSelected(currentSelectedIndex, false, true);\n          this.resetFocus(currentSelectedIndex);\n        }\n        // Reset focus to last item if the input is removed\n        else if (this.state.items.length > oldState.items.length && !this.canAddItems()) {\n          this.resetFocus(this.state.items.length - 1);\n        }\n      }\n    }\n\n    this._updateErrorMessage(this.state.items);\n\n    // handle dismiss buffer after suggestions are opened\n    if (this.state.suggestionsVisible && !oldState.suggestionsVisible) {\n      this._overrideScrollDismiss = true;\n      this._async.clearTimeout(this._overrideScrollDimissTimeout);\n      this._overrideScrollDimissTimeout = this._async.setTimeout(() => {\n        this._overrideScrollDismiss = false;\n      }, 100);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._isMounted = false;\n    if (this.currentPromise) {\n      this.currentPromise = undefined;\n    }\n    this._async.dispose();\n  }\n\n  public focus() {\n    if (this.input.current) {\n      this.input.current.focus();\n    }\n  }\n\n  public focusInput() {\n    if (this.input.current) {\n      this.input.current.focus();\n    }\n  }\n\n  public dismissSuggestions = (ev?: any): void => {\n    const selectItemFunction = () => {\n      let addItemOnDismiss: boolean | void = true;\n      if (this.props.onDismiss) {\n        addItemOnDismiss = this.props.onDismiss(\n          ev,\n          this.suggestionStore.currentSuggestion ? this.suggestionStore.currentSuggestion.item : undefined,\n        );\n      }\n\n      if (!ev || (ev && !ev.defaultPrevented)) {\n        // Select the first suggestion if one is available and permitted by onDismiss when user leaves.\n        if (\n          addItemOnDismiss !== false &&\n          this.canAddItems() &&\n          this.suggestionStore.hasSelectedSuggestion() &&\n          this.state.suggestedDisplayValue\n        ) {\n          this.addItemByIndex(0);\n        }\n      }\n    };\n\n    if (this.currentPromise) {\n      this.currentPromise.then(() => selectItemFunction());\n    } else {\n      selectItemFunction();\n    }\n\n    this.setState({ suggestionsVisible: false });\n  };\n\n  public completeSuggestion(forceComplete?: boolean) {\n    if (this.suggestionStore.hasSelectedSuggestion() && this.input.current) {\n      this.completeSelection(this.suggestionStore.currentSuggestion!.item);\n    } else if (forceComplete) {\n      this._completeGenericSuggestion();\n    }\n  }\n\n  public refocusSuggestions = (keyCode: KeyCodes): void => {\n    this.resetFocus();\n    if (this.suggestionStore.suggestions && this.suggestionStore.suggestions.length > 0) {\n      if (keyCode === KeyCodes.up) {\n        this.suggestionStore.setSelectedSuggestion(this.suggestionStore.suggestions.length - 1);\n      } else if (keyCode === KeyCodes.down) {\n        this.suggestionStore.setSelectedSuggestion(0);\n      }\n    }\n  };\n\n  public render(): JSX.Element {\n    const { suggestedDisplayValue, isFocused, items } = this.state;\n    const { className, inputProps, disabled, selectionAriaLabel, selectionRole = 'list', theme, styles } = this.props;\n\n    const suggestionsVisible = !!this.state.suggestionsVisible;\n    const suggestionsAvailable = suggestionsVisible ? this._ariaMap.suggestionList : undefined;\n    const hasError = !!(this.state.errorMessage ?? this.props.errorMessage);\n    // TODO\n    // Clean this up by leaving only the first part after removing support for SASS.\n    // Currently we can not remove the SASS styles from BasePicker class because it\n    // might be used by consumers who created custom pickers from extending from\n    // this base class and have not used the new 'styles' prop.\n    // We check for 'styles' prop which is going to be injected by the 'styled' HOC\n    // for every other already existing picker variant (PeoplePicker, TagPicker)\n    // so that we can use the CSS-in-JS styles. If the check fails (ex: custom picker),\n    // then we just use the old SASS styles instead.\n    const classNames: Partial<IProcessedStyleSet<IBasePickerStyles>> = styles\n      ? getClassNames(styles, {\n          theme,\n          className,\n          isFocused,\n          disabled,\n          hasErrorMessage: hasError,\n          inputClassName: inputProps && inputProps.className,\n        })\n      : {\n          root: css('ms-BasePicker', className ? className : ''),\n          error: 'ms-BasePicker-error',\n          text: css('ms-BasePicker-text', legacyStyles.pickerText, this.state.isFocused && legacyStyles.inputFocused),\n          itemsWrapper: legacyStyles.pickerItems,\n          input: css('ms-BasePicker-input', legacyStyles.pickerInput, inputProps && inputProps.className),\n          screenReaderText: legacyStyles.screenReaderOnly,\n        };\n\n    const comboLabel = this.props['aria-label'] || inputProps?.['aria-label'];\n    const inputId = inputProps?.id ?? this._ariaMap.combobox;\n\n    // selectionAriaLabel is contained in a separate <span> rather than an aria-label on the items list\n    // because if the items list has an aria-label, the aria-describedby on the input will only read\n    // that label instead of all the selected items. Using aria-labelledby instead fixes this, since\n    // aria-describedby and aria-labelledby will not follow a second aria-labelledby\n    return (\n      <div\n        ref={this.root}\n        className={classNames.root}\n        onKeyDown={this.onKeyDown}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onClick={this.onWrapperClick}\n      >\n        {this.renderLabel(inputId, classNames.subComponentStyles?.label)}\n        {this.renderCustomAlert(classNames.screenReaderText)}\n        <span id={`${this._ariaMap.selectedItems}-label`} hidden>\n          {selectionAriaLabel || comboLabel}\n        </span>\n        <SelectionZone selection={this.selection} selectionMode={SelectionMode.multiple}>\n          <div className={classNames.text} aria-owns={suggestionsAvailable}>\n            {items.length > 0 && (\n              <span\n                id={this._ariaMap.selectedItems}\n                className={classNames.itemsWrapper}\n                role={selectionRole}\n                aria-labelledby={`${this._ariaMap.selectedItems}-label`}\n              >\n                {this.renderItems()}\n              </span>\n            )}\n            {this.canAddItems() && (\n              <Autofill\n                spellCheck={false}\n                {...(inputProps as any)}\n                className={classNames.input}\n                componentRef={this.input}\n                id={inputId}\n                onClick={this.onClick}\n                onFocus={this.onInputFocus}\n                onBlur={this.onInputBlur}\n                onInputValueChange={this.onInputChange}\n                suggestedDisplayValue={suggestedDisplayValue}\n                aria-activedescendant={suggestionsVisible ? this.getActiveDescendant() : undefined}\n                aria-controls={suggestionsAvailable}\n                aria-describedby={this._getDescribedBy(items, hasError)}\n                aria-expanded={suggestionsVisible}\n                aria-haspopup=\"listbox\"\n                aria-label={comboLabel}\n                role=\"combobox\"\n                disabled={disabled}\n                onInputChange={this.props.onInputChange}\n              />\n            )}\n          </div>\n        </SelectionZone>\n        {this.renderError(classNames.error)}\n        {this.renderSuggestions()}\n      </div>\n    );\n  }\n\n  protected _getDescribedBy = (items: T[], hasError: boolean): string => {\n    let describedBy = '';\n    if (items.length > 0) {\n      describedBy += this._ariaMap.selectedItems + ' ';\n    }\n    if (hasError) {\n      describedBy += this._ariaMap.error;\n    }\n    return describedBy;\n  };\n\n  protected canAddItems(): boolean {\n    const { items } = this.state;\n    const { itemLimit } = this.props;\n    return itemLimit === undefined || items.length < itemLimit;\n  }\n\n  protected renderLabel(\n    inputId: string,\n    styles: IStyleFunctionOrObject<ILabelStyleProps, ILabelStyles> | undefined,\n  ): JSX.Element | null {\n    const { label, disabled, required } = this.props;\n    if (!label) {\n      return null;\n    }\n    return (\n      <Label className=\"ms-BasePicker-label\" styles={styles} disabled={disabled} required={required} htmlFor={inputId}>\n        {label}\n      </Label>\n    );\n  }\n\n  protected renderError(className?: string): JSX.Element | null {\n    const { errorMessage = this.state.errorMessage } = this.props;\n    if (!errorMessage) {\n      return null;\n    }\n    return (\n      <div role=\"alert\" id={this._ariaMap.error} className={className}>\n        {errorMessage}\n      </div>\n    );\n  }\n\n  protected renderSuggestions(): JSX.Element | null {\n    const StyledTypedSuggestions: React.FunctionComponent<ISuggestionsProps<T>> = this._styledSuggestions;\n\n    return this.state.suggestionsVisible && this.input ? (\n      <Callout\n        isBeakVisible={false}\n        gapSpace={5}\n        target={this.input.current ? this.input.current.inputElement : undefined}\n        onDismiss={this.dismissSuggestions}\n        directionalHint={DirectionalHint.bottomLeftEdge}\n        directionalHintForRTL={DirectionalHint.bottomRightEdge}\n        // eslint-disable-next-line react/jsx-no-bind\n        preventDismissOnEvent={(ev: Event) => this._preventDismissOnScrollOrResize(ev)}\n        {...this.props.pickerCalloutProps}\n      >\n        <StyledTypedSuggestions\n          // Assumed to set in derived component's defaultProps\n          onRenderSuggestion={this.props.onRenderSuggestionsItem!}\n          onSuggestionClick={this.onSuggestionClick}\n          onSuggestionRemove={this.onSuggestionRemove}\n          suggestions={this.suggestionStore.getSuggestions()}\n          componentRef={this.suggestionElement}\n          onGetMoreResults={this.onGetMoreResults}\n          moreSuggestionsAvailable={this.state.moreSuggestionsAvailable}\n          isLoading={this.state.suggestionsLoading}\n          isExtendedLoading={this.state.suggestionsExtendedLoading}\n          isSearching={this.state.isSearching}\n          isMostRecentlyUsedVisible={this.state.isMostRecentlyUsedVisible}\n          isResultsFooterVisible={this.state.isResultsFooterVisible}\n          refocusSuggestions={this.refocusSuggestions}\n          removeSuggestionAriaLabel={this.props.removeButtonAriaLabel}\n          suggestionsListId={this._ariaMap.suggestionList}\n          createGenericItem={this._completeGenericSuggestion}\n          {...this.props.pickerSuggestionsProps}\n        />\n      </Callout>\n    ) : null;\n  }\n\n  protected renderItems(): JSX.Element[] {\n    const { disabled, removeButtonAriaLabel, removeButtonIconProps } = this.props;\n    const onRenderItem = this.props.onRenderItem as (props: IPickerItemProps<T>) => JSX.Element;\n\n    const { items, selectedIndices } = this.state;\n    return items.map((item: any, index: number) =>\n      onRenderItem({\n        item,\n        index,\n        key: item.key ? item.key : index,\n        selected: selectedIndices!.indexOf(index) !== -1,\n        onRemoveItem: () => this.removeItem(item),\n        disabled,\n        onItemChange: this.onItemChange,\n        removeButtonAriaLabel,\n        removeButtonIconProps,\n      }),\n    );\n  }\n\n  protected resetFocus(index?: number) {\n    const { items } = this.state;\n\n    if (items.length) {\n      // default to focusing the last item\n      index = index ?? items.length - 1;\n      const newEl: HTMLElement | null =\n        this.root.current &&\n        (this.root.current.querySelectorAll('[data-selection-index] > button')[\n          Math.min(index!, items.length - 1)\n        ] as HTMLElement | null);\n      if (newEl) {\n        newEl.focus();\n      }\n    } else {\n      if (this.input.current) {\n        this.input.current.focus();\n      }\n    }\n  }\n\n  protected onSuggestionSelect() {\n    if (this.suggestionStore.currentSuggestion) {\n      const currentValue: string = this.input.current ? this.input.current.value : '';\n      const itemValue: string = this._getTextFromItem(this.suggestionStore.currentSuggestion.item, currentValue);\n      this.setState({ suggestedDisplayValue: itemValue });\n    }\n  }\n\n  protected onSelectionChange() {\n    this.setState({\n      selectedIndices: this.selection.getSelectedIndices(),\n    });\n  }\n\n  protected updateSuggestions(suggestions: any[]) {\n    const maxSuggestionsCount = this.props.pickerSuggestionsProps?.resultsMaximumNumber;\n    this.suggestionStore.updateSuggestions(suggestions, 0, maxSuggestionsCount);\n    this.forceUpdate();\n  }\n\n  /**\n   * Only to be called when there is nothing in the input. Checks to see if the consumer has\n   * provided a function to resolve suggestions\n   */\n  protected onEmptyInputFocus() {\n    const emptyResolveSuggestions = this.props.onEmptyResolveSuggestions\n      ? this.props.onEmptyResolveSuggestions\n      : // eslint-disable-next-line @typescript-eslint/no-deprecated\n        this.props.onEmptyInputFocus;\n\n    // Only attempt to resolve suggestions if it exists\n    if (emptyResolveSuggestions) {\n      const suggestions = emptyResolveSuggestions(this.state.items);\n\n      this.updateSuggestionsList(suggestions);\n\n      this.setState({\n        isMostRecentlyUsedVisible: true,\n        suggestionsVisible: true,\n        moreSuggestionsAvailable: false,\n      });\n    }\n  }\n\n  protected updateValue(updatedValue: string) {\n    this._onResolveSuggestionsDebounced(updatedValue);\n  }\n\n  protected updateSuggestionsList(suggestions: T[] | PromiseLike<T[]>, updatedValue?: string) {\n    // Check to see if the returned value is an array, if it is then just pass it into the next function .\n    // If the returned value is not an array then check to see if it's a promise or PromiseLike.\n    // If it is then resolve it asynchronously.\n    if (Array.isArray(suggestions)) {\n      this._updateAndResolveValue(updatedValue, suggestions);\n    } else if (suggestions && (suggestions as PromiseLike<T[]>).then) {\n      this.setState({\n        suggestionsLoading: true,\n      });\n      this._startLoadTimer();\n\n      // Clear suggestions\n      this.suggestionStore.updateSuggestions([]);\n\n      if (updatedValue !== undefined) {\n        this.setState({\n          suggestionsVisible: this._getShowSuggestions(),\n        });\n      } else {\n        this.setState({\n          suggestionsVisible:\n            this.input.current! && this.input.current!.inputElement === getDocumentEx(this.context)?.activeElement,\n        });\n      }\n\n      // Ensure that the promise will only use the callback if it was the most recent one.\n      this.currentPromise = suggestions;\n      suggestions.then((newSuggestions: T[]) => {\n        if (suggestions === this.currentPromise) {\n          this._updateAndResolveValue(updatedValue, newSuggestions);\n        }\n      });\n    }\n  }\n\n  protected resolveNewValue(updatedValue: string, suggestions: T[]) {\n    this.updateSuggestions(suggestions);\n    let itemValue: string | undefined = undefined;\n\n    if (this.suggestionStore.currentSuggestion) {\n      itemValue = this._getTextFromItem(this.suggestionStore.currentSuggestion.item, updatedValue);\n    }\n\n    // Only set suggestionloading to false after there has been time for the new suggestions to flow\n    // to the suggestions list. This is to ensure that the suggestions are available before aria-activedescendant\n    // is set so that screen readers will read out the first selected option.\n    this.setState(\n      {\n        suggestedDisplayValue: itemValue,\n        suggestionsVisible: this._getShowSuggestions(),\n      },\n      () => this.setState({ suggestionsLoading: false, suggestionsExtendedLoading: false }),\n    );\n  }\n\n  protected onChange(items?: T[]) {\n    if (this.props.onChange) {\n      (this.props.onChange as any)(items);\n    }\n  }\n\n  protected onInputChange = (value: string): void => {\n    this.updateValue(value);\n    this.setState({\n      moreSuggestionsAvailable: true,\n      isMostRecentlyUsedVisible: false,\n    });\n  };\n\n  protected onSuggestionClick = (ev: React.MouseEvent<HTMLElement>, item: any, index: number): void => {\n    this.addItemByIndex(index);\n  };\n\n  protected onSuggestionRemove = (ev: React.MouseEvent<HTMLElement>, item: T, index: number): void => {\n    if (this.props.onRemoveSuggestion) {\n      this.props.onRemoveSuggestion(item);\n    }\n    this.suggestionStore.removeSuggestion(index);\n  };\n\n  protected onInputFocus = (ev: React.FocusEvent<HTMLInputElement | Autofill>): void => {\n    this.selection.setAllSelected(false);\n    // Only trigger all of the focus if this component isn't already focused.\n    // For example when an item is selected or removed from the selected list it should be treated\n    // as though the input is still focused.\n    if (!this.state.isFocused) {\n      this._userTriggeredSuggestions();\n\n      if (this.props.inputProps && this.props.inputProps.onFocus) {\n        this.props.inputProps.onFocus(ev as React.FocusEvent<HTMLInputElement>);\n      }\n    }\n  };\n\n  protected onInputBlur = (ev: React.FocusEvent<HTMLInputElement | Autofill>): void => {\n    if (this.props.inputProps && this.props.inputProps.onBlur) {\n      this.props.inputProps.onBlur(ev as React.FocusEvent<HTMLInputElement>);\n    }\n  };\n\n  protected onBlur = (ev: React.FocusEvent<HTMLElement | Autofill>): void => {\n    if (this.state.isFocused) {\n      // Only blur the entire component if an unrelated element gets focus.\n      // Otherwise treat it as though it still has focus.\n      // Do nothing if the blur is coming from something\n      // inside the comboBox root or the comboBox menu since\n      // it we are not really bluring from the whole comboBox\n      let relatedTarget: EventTarget | null = ev.relatedTarget;\n\n      if (ev.relatedTarget === null) {\n        // In IE11, due to lack of support, event.relatedTarget is always\n        // null making every onBlur call to be \"outside\" of the ComboBox\n        // even when it's not. Using document.activeElement is another way\n        // for us to be able to get what the relatedTarget without relying\n        // on the event\n        relatedTarget = getDocumentEx(this.context)!.activeElement;\n      }\n      if (relatedTarget && !elementContains(this.root.current!, relatedTarget as HTMLElement)) {\n        this.setState({ isFocused: false });\n        if (this.props.onBlur) {\n          this.props.onBlur(ev as React.FocusEvent<HTMLInputElement>);\n        }\n      }\n    }\n  };\n\n  /**\n   * Resets focus to last element in wrapper div if clicking back into Picker that has hit item limit\n   */\n  protected onWrapperClick = (ev: React.MouseEvent<HTMLInputElement>): void => {\n    if (this.state.items.length && !this.canAddItems()) {\n      this.resetFocus(this.state.items.length - 1);\n    }\n  };\n\n  /**\n   * Reveals suggestions any time the user clicks on the input element\n   * without shifting focus.\n   */\n  protected onClick = (ev: React.MouseEvent<HTMLInputElement>): void => {\n    if (this.props.inputProps !== undefined && this.props.inputProps.onClick !== undefined) {\n      this.props.inputProps.onClick(ev);\n    }\n\n    // Only primary (left) clicks show suggestions.\n    if (ev.button === 0) {\n      this._userTriggeredSuggestions();\n    }\n  };\n\n  protected onFocus = () => {\n    if (!this.state.isFocused) {\n      this.setState({ isFocused: true });\n    }\n  };\n\n  protected onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    const keyCode = ev.which;\n    switch (keyCode) {\n      case KeyCodes.escape:\n        if (this.state.suggestionsVisible) {\n          this.setState({ suggestionsVisible: false });\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n        break;\n\n      case KeyCodes.tab:\n      case KeyCodes.enter:\n        if (this.suggestionElement.current && this.suggestionElement.current.hasSuggestedActionSelected()) {\n          this.suggestionElement.current.executeSelectedAction();\n        } else if (!ev.shiftKey && this.suggestionStore.hasSelectedSuggestion() && this.state.suggestionsVisible) {\n          this.completeSuggestion();\n          ev.preventDefault();\n          ev.stopPropagation();\n        } else {\n          this._completeGenericSuggestion();\n        }\n\n        break;\n\n      case KeyCodes.backspace:\n        if (!this.props.disabled) {\n          this.onBackspace(ev);\n        }\n        ev.stopPropagation();\n        break;\n\n      case KeyCodes.del:\n        if (!this.props.disabled) {\n          if (\n            this.input.current &&\n            ev.target === this.input.current.inputElement &&\n            this.state.suggestionsVisible &&\n            this.suggestionStore.currentIndex !== -1\n          ) {\n            if (this.props.onRemoveSuggestion) {\n              this.props.onRemoveSuggestion(this.suggestionStore.currentSuggestion!.item);\n            }\n            this.suggestionStore.removeSuggestion(this.suggestionStore.currentIndex);\n            this.forceUpdate();\n          } else {\n            this.onBackspace(ev);\n          }\n        }\n        ev.stopPropagation();\n        break;\n\n      case KeyCodes.up:\n        if (this.input.current && ev.target === this.input.current.inputElement && this.state.suggestionsVisible) {\n          if (\n            this.suggestionElement.current &&\n            this.suggestionElement.current.tryHandleKeyDown(keyCode, this.suggestionStore.currentIndex)\n          ) {\n            ev.preventDefault();\n            ev.stopPropagation();\n            this.forceUpdate();\n          } else {\n            if (\n              this.suggestionElement.current &&\n              this.suggestionElement.current.hasSuggestedAction() &&\n              this.suggestionStore.currentIndex === 0\n            ) {\n              ev.preventDefault();\n              ev.stopPropagation();\n              this.suggestionElement.current.focusAboveSuggestions();\n              this.suggestionStore.deselectAllSuggestions();\n              this.forceUpdate();\n            } else {\n              if (this.suggestionStore.previousSuggestion()) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                this.onSuggestionSelect();\n              }\n            }\n          }\n        }\n        break;\n\n      case KeyCodes.down:\n        if (this.input.current && ev.target === this.input.current.inputElement && this.state.suggestionsVisible) {\n          if (\n            this.suggestionElement.current &&\n            this.suggestionElement.current.tryHandleKeyDown(keyCode, this.suggestionStore.currentIndex)\n          ) {\n            ev.preventDefault();\n            ev.stopPropagation();\n            this.forceUpdate();\n          } else {\n            if (\n              this.suggestionElement.current &&\n              this.suggestionElement.current.hasSuggestedAction() &&\n              this.suggestionStore.currentIndex + 1 === this.suggestionStore.suggestions.length\n            ) {\n              ev.preventDefault();\n              ev.stopPropagation();\n              this.suggestionElement.current.focusBelowSuggestions();\n              this.suggestionStore.deselectAllSuggestions();\n              this.forceUpdate();\n            } else {\n              if (this.suggestionStore.nextSuggestion()) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                this.onSuggestionSelect();\n              }\n            }\n          }\n        }\n        break;\n    }\n  };\n\n  protected onItemChange = (changedItem: T, index: number): void => {\n    const { items } = this.state;\n\n    if (index >= 0) {\n      const newItems: T[] = items;\n      newItems[index] = changedItem;\n\n      this._updateSelectedItems(newItems);\n    }\n  };\n\n  protected onGetMoreResults = (): void => {\n    this.setState(\n      {\n        isSearching: true,\n      },\n      () => {\n        if (this.props.onGetMoreResults && this.input.current) {\n          const suggestions: T[] | PromiseLike<T[]> = (this.props.onGetMoreResults as any)(\n            this.input.current.value,\n            this.state.items,\n          );\n          const suggestionsArray: T[] = suggestions as T[];\n          const suggestionsPromiseLike: PromiseLike<T[]> = suggestions as PromiseLike<T[]>;\n\n          if (Array.isArray(suggestionsArray)) {\n            this.updateSuggestions(suggestionsArray);\n            this.setState({ isSearching: false });\n          } else if (suggestionsPromiseLike.then) {\n            suggestionsPromiseLike.then((newSuggestions: T[]) => {\n              this.updateSuggestions(newSuggestions);\n              this.setState({ isSearching: false });\n            });\n          }\n        } else {\n          this.setState({ isSearching: false });\n        }\n\n        if (this.input.current) {\n          this.input.current.focus();\n        }\n\n        this.setState({\n          moreSuggestionsAvailable: false,\n          isResultsFooterVisible: true,\n        });\n      },\n    );\n  };\n\n  protected completeSelection = (item: T) => {\n    this.addItem(item);\n    this.updateValue('');\n    if (this.input.current) {\n      this.input.current.clear();\n    }\n    this.setState({ suggestionsVisible: false });\n  };\n\n  protected addItemByIndex = (index: number): void => {\n    this.completeSelection(this.suggestionStore.getSuggestionAtIndex(index).item);\n  };\n\n  protected addItem = (item: T): void => {\n    const processedItem: T | PromiseLike<T> | null = this.props.onItemSelected\n      ? (this.props.onItemSelected as any)(item)\n      : item;\n\n    if (processedItem === null) {\n      return;\n    }\n\n    const processedItemObject: T = processedItem as T;\n    const processedItemPromiseLike: PromiseLike<T> = processedItem as PromiseLike<T>;\n\n    if (processedItemPromiseLike && processedItemPromiseLike.then) {\n      processedItemPromiseLike.then((resolvedProcessedItem: T) => {\n        const newItems: T[] = this.state.items.concat([resolvedProcessedItem]);\n        this._updateSelectedItems(newItems);\n      });\n    } else {\n      const newItems: T[] = this.state.items.concat([processedItemObject]);\n      this._updateSelectedItems(newItems);\n    }\n    this.setState({ suggestedDisplayValue: '', selectionRemoved: undefined });\n  };\n\n  protected removeItem = (item: T): void => {\n    const { items } = this.state;\n    const index: number = items.indexOf(item);\n\n    if (index >= 0) {\n      const newItems: T[] = items.slice(0, index).concat(items.slice(index + 1));\n      this.setState({ selectionRemoved: item });\n      this._updateSelectedItems(newItems);\n\n      // reset selection removed text after a timeout so it isn't reached by screen reader virtual cursor.\n      // the exact timing isn't important, the live region will fully read even if the text is removed.\n      this._async.setTimeout(() => {\n        this.setState({ selectionRemoved: undefined });\n      }, 1000);\n    }\n  };\n\n  protected removeItems = (itemsToRemove: any[]): void => {\n    const { items } = this.state;\n    const newItems: T[] = items.filter((item: any) => itemsToRemove.indexOf(item) === -1);\n\n    this._updateSelectedItems(newItems);\n  };\n\n  // This is protected because we may expect the backspace key to work differently in a different kind of picker.\n  // This lets the subclass override it and provide it's own onBackspace. For an example see the BasePickerListBelow\n  protected onBackspace(ev: React.KeyboardEvent<HTMLElement>) {\n    if (\n      (this.state.items.length && !this.input.current) ||\n      (this.input.current && !this.input.current.isValueSelected && this.input.current.cursorLocation === 0)\n    ) {\n      if (this.selection.getSelectedCount() > 0) {\n        this.removeItems(this.selection.getSelection());\n      } else {\n        this.removeItem(this.state.items[this.state.items.length - 1]);\n      }\n    }\n  }\n\n  /**\n   * @deprecated this is no longer necessary as focuszone has been removed\n   */\n  protected _shouldFocusZoneEnterInnerZone = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    // If suggestions are shown const up/down keys control them, otherwise allow them through to control the focusZone.\n    if (this.state.suggestionsVisible) {\n      // eslint-disable-next-line @typescript-eslint/no-deprecated\n      switch (ev.which) {\n        case KeyCodes.up:\n        case KeyCodes.down:\n          return true;\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    if (ev.which === KeyCodes.enter) {\n      return true;\n    }\n\n    return false;\n  };\n\n  protected getActiveDescendant() {\n    if (this.state.suggestionsLoading) {\n      return undefined;\n    }\n\n    const currentIndex = this.suggestionStore.currentIndex;\n\n    if (currentIndex < 0) {\n      // if the suggestions element has actions and the currentIndex does not point to a suggestion,\n      // return the action id\n      if (this.suggestionElement.current?.hasSuggestedAction()) {\n        return 'sug-selectedAction';\n      }\n\n      // If there are no suggestions and no action suggested, then return the ID for the no results found.\n      if (this.suggestionStore.suggestions.length === 0) {\n        return 'sug-noResultsFound';\n      }\n\n      return undefined;\n    } else {\n      return `sug-${currentIndex}`;\n    }\n  }\n\n  /** @deprecated use renderCustomAlert instead */\n  protected getSuggestionsAlert(suggestionAlertClassName: string = legacyStyles.screenReaderOnly) {\n    const currentIndex = this.suggestionStore.currentIndex;\n    if (this.props.enableSelectedSuggestionAlert) {\n      const selectedSuggestion =\n        currentIndex > -1 ? this.suggestionStore.getSuggestionAtIndex(this.suggestionStore.currentIndex) : undefined;\n      const selectedSuggestionAlertText = selectedSuggestion ? selectedSuggestion.ariaLabel : undefined;\n      // keeping the id/className here for legacy support\n      return (\n        <div id={this._ariaMap.selectedSuggestionAlert} className={suggestionAlertClassName}>\n          {`${selectedSuggestionAlertText} `}\n        </div>\n      );\n    }\n  }\n\n  protected renderCustomAlert(alertClassName: string = legacyStyles.screenReaderOnly) {\n    const { suggestionRemovedText = 'removed {0}' } = this.props;\n    let removedItemText = '';\n\n    if (this.state.selectionRemoved) {\n      const itemName = this._getTextFromItem(this.state.selectionRemoved, '');\n      removedItemText = format(suggestionRemovedText, itemName);\n    }\n\n    return (\n      <div className={alertClassName} id={this._ariaMap.selectedSuggestionAlert} aria-live=\"assertive\">\n        {\n          // eslint-disable-next-line @typescript-eslint/no-deprecated\n          this.getSuggestionsAlert(alertClassName)\n        }\n        {removedItemText}\n      </div>\n    );\n  }\n\n  // do not dismiss if the window resizes or scrolls within 100ms of opening\n  // this prevents the Android issue where pickers immediately dismiss on open, because the keyboard appears\n  private _preventDismissOnScrollOrResize(ev: Event) {\n    if (this._overrideScrollDismiss && (ev.type === 'scroll' || ev.type === 'resize')) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /** If suggestions are still loading after a predefined amount of time, set state to show user alert */\n  private _startLoadTimer() {\n    this._async.setTimeout(() => {\n      if (this.state.suggestionsLoading) {\n        this.setState({ suggestionsExtendedLoading: true });\n      }\n    }, EXTENDED_LOAD_TIME);\n  }\n\n  /**\n   * Takes in the current updated value and either resolves it with the new suggestions\n   * or if updated value is undefined then it clears out currently suggested items\n   */\n  private _updateAndResolveValue(updatedValue: string | undefined, newSuggestions: T[]) {\n    if (updatedValue !== undefined) {\n      this.resolveNewValue(updatedValue, newSuggestions);\n    } else {\n      const maxSuggestionsCount = this.props.pickerSuggestionsProps?.resultsMaximumNumber;\n      this.suggestionStore.updateSuggestions(newSuggestions, -1, maxSuggestionsCount);\n      if (this.state.suggestionsLoading) {\n        this.setState({\n          suggestionsLoading: false,\n          suggestionsExtendedLoading: false,\n        });\n      }\n    }\n  }\n\n  private async _getErrorMessage(items: T[]): Promise<string | JSX.Element | undefined> {\n    if (this.props.errorMessage) {\n      return this.props.errorMessage;\n    }\n    if (this.props.onGetErrorMessage) {\n      try {\n        const errorMessage = this.props.onGetErrorMessage(items);\n        if (errorMessage) {\n          if ((errorMessage as PromiseLike<string | JSX.Element>).then) {\n            return await (errorMessage as PromiseLike<string | JSX.Element>);\n          } else {\n            return errorMessage as string | JSX.Element;\n          }\n        } else {\n          return undefined;\n        }\n      } catch (err) {\n        /* NO-OP */\n      }\n    }\n  }\n\n  private _updateErrorMessage(items: T[]): void {\n    let newErrorMessage: string | JSX.Element | undefined;\n    this._getErrorMessage(items)\n      .then(errorMessage => {\n        newErrorMessage = errorMessage;\n      })\n      .catch(() => {\n        /* NO-OP */\n      })\n      .finally(() => {\n        if (this._isMounted && newErrorMessage !== this.state.errorMessage) {\n          this.setState({ errorMessage: newErrorMessage });\n        }\n      });\n  }\n\n  /**\n   * Controls what happens whenever there is an action that impacts the selected items.\n   * If `selectedItems` is provided, this will act as a controlled component and it will not update its own state.\n   */\n  private _updateSelectedItems(items: T[]): void {\n    if (this.props.selectedItems) {\n      // If the component is a controlled component then the controlling component will need to add or remove the items.\n      this.onChange(items);\n    } else {\n      this.setState({ items }, () => {\n        this._updateErrorMessage(items);\n        this._onSelectedItemsUpdated(items);\n      });\n    }\n  }\n\n  private _onSelectedItemsUpdated(items?: T[]): void {\n    this.onChange(items);\n  }\n\n  /**\n   * Suggestions are normally shown after the user updates text and the text\n   * is non-empty, but also when the user clicks on the input element.\n   * @returns True if suggestions should be shown.\n   */\n  private _getShowSuggestions(): boolean {\n    const areSuggestionsVisible =\n      this.input.current !== undefined &&\n      this.input.current !== null &&\n      this.input.current.inputElement === getDocumentEx(this.context)?.activeElement &&\n      this.input.current.value !== '';\n\n    return areSuggestionsVisible;\n  }\n\n  private _onResolveSuggestions = (updatedValue: string): void => {\n    const suggestions: T[] | PromiseLike<T[]> | null = this.props.onResolveSuggestions(updatedValue, this.state.items);\n\n    if (suggestions !== null) {\n      this.updateSuggestionsList(suggestions, updatedValue);\n    }\n  };\n\n  private _completeGenericSuggestion = (): void => {\n    if (\n      this.props.onValidateInput &&\n      this.input.current &&\n      (this.props.onValidateInput as any)(this.input.current.value) !== ValidationState.invalid &&\n      this.props.createGenericItem\n    ) {\n      const itemToConvert = this.props.createGenericItem(\n        this.input.current.value,\n        this.props.onValidateInput(this.input.current.value),\n      );\n      this.suggestionStore.createGenericSuggestion(itemToConvert);\n      this.completeSuggestion();\n    }\n  };\n\n  private _getTextFromItem(item: T, currentValue?: string): string {\n    if (this.props.getTextFromItem) {\n      return (this.props.getTextFromItem as any)(item, currentValue);\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * This should be called when the user does something other than use text entry to trigger suggestions.\n   *\n   */\n  private _userTriggeredSuggestions = () => {\n    if (!this.state.suggestionsVisible) {\n      const input = this.input.current ? this.input.current.value : '';\n      if (!input) {\n        this.onEmptyInputFocus();\n      } else {\n        if (this.suggestionStore.suggestions.length === 0) {\n          this._onResolveSuggestionsDebounced(input);\n        } else {\n          this.setState({\n            isMostRecentlyUsedVisible: false,\n            suggestionsVisible: true,\n          });\n        }\n      }\n    }\n  };\n}\n\nexport class BasePickerListBelow<T extends {}, P extends IBasePickerProps<T>> extends BasePicker<T, P> {\n  public render(): JSX.Element {\n    const { suggestedDisplayValue, isFocused, items } = this.state;\n    const { className, inputProps, disabled, selectionAriaLabel, selectionRole = 'list', theme, styles } = this.props;\n\n    const suggestionsVisible = !!this.state.suggestionsVisible;\n\n    const suggestionsAvailable: string | undefined = suggestionsVisible ? this._ariaMap.suggestionList : undefined;\n    const hasError = !!(this.state.errorMessage ?? this.props.errorMessage);\n    // TODO\n    // Clean this up by leaving only the first part after removing support for SASS.\n    // Currently we can not remove the SASS styles from BasePicker class because it\n    // might be used by consumers who created custom pickers from extending from\n    // this base class and have not used the new 'styles' prop.\n    // We check for 'styles' prop which is going to be injected by the 'styled' HOC\n    // for every other already existing picker variant (PeoplePicker, TagPicker)\n    // so that we can use the CSS-in-JS styles. If the check fails (ex: custom picker),\n    // then we just use the old SASS styles instead.\n    const classNames: Partial<IProcessedStyleSet<IBasePickerStyles>> = styles\n      ? getClassNames(styles, {\n          theme,\n          className,\n          isFocused,\n          disabled,\n          hasErrorMessage: hasError,\n          inputClassName: inputProps && inputProps.className,\n        })\n      : {\n          root: css('ms-BasePicker', legacyStyles.picker, className ? className : ''),\n          error: 'ms-BasePicker-error',\n          text: css(\n            'ms-BasePicker-text',\n            legacyStyles.pickerText,\n            this.state.isFocused && legacyStyles.inputFocused,\n            disabled && legacyStyles.inputDisabled,\n          ),\n          itemsWrapper: legacyStyles.pickerItems,\n          input: css('ms-BasePicker-input', legacyStyles.pickerInput, inputProps && inputProps.className),\n          screenReaderText: legacyStyles.screenReaderOnly,\n        };\n\n    const comboLabel = this.props['aria-label'] || inputProps?.['aria-label'];\n    const inputId = inputProps?.id ?? this._ariaMap.combobox;\n\n    return (\n      <div ref={this.root} onBlur={this.onBlur} onFocus={this.onFocus}>\n        {this.renderLabel(inputId, classNames.subComponentStyles?.label)}\n        <div className={classNames.root} onKeyDown={this.onKeyDown}>\n          {this.renderCustomAlert(classNames.screenReaderText)}\n          <span id={`${this._ariaMap.selectedItems}-label`} hidden>\n            {selectionAriaLabel || comboLabel}\n          </span>\n          <div className={classNames.text} aria-owns={suggestionsAvailable}>\n            <Autofill\n              {...(inputProps as any)}\n              className={classNames.input}\n              componentRef={this.input}\n              onFocus={this.onInputFocus}\n              onBlur={this.onInputBlur}\n              onClick={this.onClick}\n              onInputValueChange={this.onInputChange}\n              suggestedDisplayValue={suggestedDisplayValue}\n              aria-activedescendant={suggestionsVisible ? this.getActiveDescendant() : undefined}\n              aria-controls={suggestionsAvailable}\n              aria-expanded={suggestionsVisible}\n              aria-haspopup=\"listbox\"\n              aria-label={comboLabel}\n              aria-describedby={this._getDescribedBy(items, hasError)}\n              role=\"combobox\"\n              id={inputId}\n              disabled={disabled}\n              onInputChange={this.props.onInputChange}\n            />\n          </div>\n        </div>\n        {this.renderSuggestions()}\n        <SelectionZone selection={this.selection} selectionMode={SelectionMode.single}>\n          <div\n            id={this._ariaMap.selectedItems}\n            className=\"ms-BasePicker-selectedItems\" // just a className hook without any styles applied to it.\n            role={selectionRole}\n            aria-labelledby={`${this._ariaMap.selectedItems}-label`}\n          >\n            {this.renderItems()}\n          </div>\n        </SelectionZone>\n        {this.renderError(classNames.error)}\n      </div>\n    );\n  }\n\n  protected onBackspace(ev: React.KeyboardEvent<HTMLElement>) {\n    // override the existing backspace method to not do anything because the list items appear below.\n  }\n}\n"]}