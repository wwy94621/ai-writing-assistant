{"version":3,"file":"elementContains.js","sourceRoot":"../src/","sources":["elementContains.ts"],"names":[],"mappings":";;;AAAA,yCAAwC;AACxC;;;;;;GAMG;AACH,SAAgB,eAAe,CAC7B,MAA0B,EAC1B,KAAyB,EACzB,mBAAmC;IAAnC,oCAAA,EAAA,0BAAmC;IAEnC,IAAI,WAAW,GAAG,KAAK,CAAC;IAExB,IAAI,MAAM,IAAI,KAAK,EAAE,CAAC;QACpB,IAAI,mBAAmB,EAAE,CAAC;YACxB,IAAI,MAAM,KAAK,KAAK,EAAE,CAAC;gBACrB,WAAW,GAAG,IAAI,CAAC;YACrB,CAAC;iBAAM,CAAC;gBACN,WAAW,GAAG,KAAK,CAAC;gBAEpB,OAAO,KAAK,EAAE,CAAC;oBACb,IAAM,UAAU,GAAuB,IAAA,qBAAS,EAAC,KAAK,CAAC,CAAC;oBAExD,IAAI,UAAU,KAAK,MAAM,EAAE,CAAC;wBAC1B,WAAW,GAAG,IAAI,CAAC;wBACnB,MAAM;oBACR,CAAC;oBAED,KAAK,GAAG,UAAU,CAAC;gBACrB,CAAC;YACH,CAAC;QACH,CAAC;aAAM,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;YAC3B,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IAED,OAAO,WAAW,CAAC;AACrB,CAAC;AA/BD,0CA+BC","sourcesContent":["import { getParent } from './getParent';\n/**\n * Determines whether or not a parent element contains a given child element.\n * If `allowVirtualParents` is true, this method may return `true` if the child\n * has the parent in its virtual element hierarchy.\n *\n * @public\n */\nexport function elementContains(\n  parent: HTMLElement | null,\n  child: HTMLElement | null,\n  allowVirtualParents: boolean = true,\n): boolean {\n  let isContained = false;\n\n  if (parent && child) {\n    if (allowVirtualParents) {\n      if (parent === child) {\n        isContained = true;\n      } else {\n        isContained = false;\n\n        while (child) {\n          const nextParent: HTMLElement | null = getParent(child);\n\n          if (nextParent === parent) {\n            isContained = true;\n            break;\n          }\n\n          child = nextParent;\n        }\n      }\n    } else if (parent.contains) {\n      isContained = parent.contains(child);\n    }\n  }\n\n  return isContained;\n}\n"]}