{"version":3,"file":"getParent.js","sourceRoot":"../src/","sources":["getParent.ts"],"names":[],"mappings":";;;;IACA;;;;;;OAMG;IACH,SAAgB,SAAS,CAAC,KAAkB,EAAE,mBAAmC;;QAAnC,oCAAA,EAAA,0BAAmC;QAC/E,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,OAAO,IAAI,CAAC;QACd,CAAC;QAED,IAAM,MAAM,GAAG,mBAAmB,IAAI,IAAA,mCAAgB,EAAC,KAAK,CAAC,CAAC;QAE9D,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,MAAM,CAAC;QAChB,CAAC;QAED,4CAA4C;QAC5C,IAAI,OAAQ,KAAyB,CAAC,gBAAgB,KAAK,UAAU,KAAI,MAAA,KAAK,CAAC,YAAY,0CAAE,UAAU,CAAA,EAAE,CAAC;YACxG,qBAAqB;YACrB,OAAO,KAAK,CAAC,YAA2B,CAAC;QAC3C,CAAC;aAAM,IAAI,CAAA,MAAA,KAAK,CAAC,UAAU,0CAAE,QAAQ,MAAK,EAAE,EAAE,CAAC;YAC7C,mCAAmC;YACnC,4BAA4B;YAC5B,OAAQ,KAAK,CAAC,UAAyB,CAAC,IAAmB,CAAC;QAC9D,CAAC;aAAM,CAAC;YACN,OAAO,KAAK,CAAC,UAAyB,CAAC;QACzC,CAAC;IACH,CAAC;IAtBD,8BAsBC","sourcesContent":["import { getVirtualParent } from './getVirtualParent';\n/**\n * Gets the element which is the parent of a given element.\n * If `allowVirtuaParents` is `true`, this method prefers the virtual parent over\n * real DOM parent when present.\n *\n * @public\n */\nexport function getParent(child: HTMLElement, allowVirtualParents: boolean = true): HTMLElement | null {\n  if (!child) {\n    return null;\n  }\n\n  const parent = allowVirtualParents && getVirtualParent(child);\n\n  if (parent) {\n    return parent;\n  }\n\n  // Support looking for parents in shadow DOM\n  if (typeof (child as HTMLSlotElement).assignedElements !== 'function' && child.assignedSlot?.parentNode) {\n    // Element is slotted\n    return child.assignedSlot as HTMLElement;\n  } else if (child.parentNode?.nodeType === 11) {\n    // nodeType 11 is DOCUMENT_FRAGMENT\n    // Element is in shadow root\n    return (child.parentNode as ShadowRoot).host as HTMLElement;\n  } else {\n    return child.parentNode as HTMLElement;\n  }\n}\n"]}